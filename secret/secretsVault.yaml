AWSTemplateFormatVersion: '2010-09-09'
Description: 'Secrets manager stack'
Parameters:
  KmsKeyArn:
    Description: 'KMS key Arn'
    Type: String
    Default: ''
  GrantUsrAdmin:
    Description: Make the user capable to update the AWS SM secret.
    Default: 'yes'
    Type: String
    AllowedValues:
      - 'yes'
      - 'no'
Conditions:
  HasKmsKeyArn: !Not
    - !Equals 
      - !Ref KmsKeyArn
      - ''
  IsUsrAdm: !Equals 
    - !Ref GrantUsrAdmin
    - 'yes'

Resources:
  secretsVault:
    Type: AWS::SecretsManager::Secret
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
          Description: !Sub '${AWS::StackName} secrets manager'
          KmsKeyId: !If 
            - HasKmsKeyArn
            - !Ref KmsKeyArn
            - !Ref 'AWS::NoValue'
  secretsVaultResourcePolicy:
    Type: AWS::SecretsManager::ResourcePolicy
    Properties:
      BlockPublicPolicy: True
      SecretId: !Ref secretsVault
      ResourcePolicy:
        Version: '2012-10-17'
        Statement:
          - Resource: !Ref secretsVault
            Action:
              !If 
                - IsUsrAdm
                - secretsmanager:*
                - - secretsmanager:GetResourcePolicy
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                  - secretsmanager:ListSecretVersionIds
                  - secretsmanager:ListSecrets
            Effect: Allow
            Principal:
              AWS: 
                # - !Sub '${AWS::AccountId}'
                # - !Sub 'arn:aws:iam::${AWS::AccountId}:root'
                # - !Sub arn:aws:iam::${AWS::AccountId}:role/role-name
                # - !Sub arn:aws:iam::${AWS::AccountId}:assumed-role/role-name/role-session-name
                # - !Sub arn:aws:iam::${AWS::AccountId}:user/user-name
                - !GetAtt secretsVaultUsr.Arn

  secretsVaultUsr:
    Type: AWS::IAM::User

  secretsVaultUsrKey:
    Type: AWS::IAM::AccessKey
    Properties:
      Status: Active
      UserName: !Ref secretsVaultUsr


Outputs:
  secretsVaultArn:
    Value: !Ref secretsVault
    Export:
      Name: !Sub '${AWS::StackName}SmArn'
  secretsVaultUsrId:
    Value: !Ref secretsVaultUsr
    Export:
      Name: !Sub '${AWS::StackName}SmUsrId'
  secretsVaultUsrAccessKeyId: 
    Value: !Ref secretsVaultUsrKey
    Export:
      Name: !Sub '${AWS::StackName}SmUsrAccessKey'
  secretsVaultUsrSecretKey:
    Value: !GetAtt secretsVaultUsrKey.SecretAccessKey
    Export:
      Name: !Sub '${AWS::StackName}SmUsrSecretKey'

  

